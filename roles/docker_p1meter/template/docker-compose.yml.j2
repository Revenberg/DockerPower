version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    restart: always
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
      - ./data/prometheus/data:/data/prometheus       
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/data/prometheus'
    expose:
      - 9090
    user: "0"
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
    
  mqtt2slack:
    image: revenberg/mqtt2slack
    container_name: mqtt2slack
    depends_on:
      - mqtt
    restart: always
    links:
      - mqtt
    environment:
      - webhook={{ slack_webhook }}
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: always
    expose:
      - 9100

  mqtt-exporter:
    image: kpetrem/mqtt-exporter
    restart: always
    ports:
      - 9000:9000
    environment:
      - MQTT_ADDRESS={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
      - PROMETHEUS_PREFIX=readings_
      - TOPIC_LABEL=readings
  
  cadvisor:
    image: braingamer/cadvisor-arm:latest
    container_name: monitoring_cadvisor
    privileged: true
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    devices:
      - /dev/kmsg
    expose:
      - 8080

  p1mqtt:
    image: revenberg/dockerp1mqtt    
    container_name: p1mqtt
    environment:
      - MQTT_ADDRESS={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
      - MQTT_PORT=1883
      - MQTT_TOPIC=readings/p1
    depends_on:
      - mqtt
    restart: always
    links:
      - mqtt
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0

  solarrs485mqtt:
    image: revenberg/solarrs485mqtt
    container_name: solar2mqtt
    environment:
      - RS485_ADDRESS=192.168.2.40
      - RS485_PORT=8899
      - MQTT_ADDRESS={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
      - MQTT_PORT=1883
      - MQTT_TOPIC=readings/solar
    depends_on:
      - mqtt
    restart: always
    links:
      - mqtt

#  watermeter:
#    image: revenberg/watermeter
#    container_name: watermeter
#    depends_on:
#      - influxdb
#      - mqtt
#    restart: always
#    links:
#      - influxdb
#      - mqtt
  
  openweathermapmqtt:
    image: revenberg/openweathermapmqtt
    container_name: openweathermapmqtt
    environment:
      - apikey={{ openweathermap_apikey }}
      - WEATHER_COUNTRY=Surhuisterveen,NL
      - WEATHER_LANGUAGE=nl
      - MQTT_ADDRESS={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
      - MQTT_PORT=1883
      - MQTT_TOPIC=readings/weather
    restart: always
    depends_on:
      - mqtt
    restart: always
    links:
      - mqtt      

  influxdb:
    image: hypriot/rpi-influxdb
    container_name: influxdb
    environment:
     - INFLUXDB_INIT_PWD="password"
     - PRE_CREATE_DB="power;solar;water;weather"
    restart: always
    ports:
     - "8083:8083"
     - "8086:8086"
    volumes:
      - ./data/influxdb/data:/var/lib/influxdb  

  grafana:
    image: revenberg/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - './env/env.grafana'
    user: "0"
    links:
      - influxdb:influxdb
      - prometheus:prometheus
    restart: always
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - ./data/grafana/data:/var/lib/grafana
      - ./data/grafana/dashboards:/etc/grafana/provisioning/dashboards/
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=PathPrefix(`/grafana{regex:$$|/.*}`)'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
      - 'traefik.frontend.headers.customRequestHeaders=Authorization:-'
    environment:
    - GF_SECURITY_ADMIN_USER=admin
    - GF_SECURITY_ADMIN_PASSWORD=admin

  mqtt:
    image: "eclipse-mosquitto:latest"
    container_name: mqtt
    environment:
      - TZ=Europe/Amsterdam
      - "MQTT_BROKER_URL=mqtt://127.0.0.1"
    ports:
      - 1883:1883
      - 9001:9001
    user: "1000:1000"
    volumes:
      - ./data/mqtt/config:/mosquitto/config
      - ./data/mqtt/data:/mosquitto/data
      - ./data/mqtt/log:/mosquitto/log
    restart: always
    network_mode: host
