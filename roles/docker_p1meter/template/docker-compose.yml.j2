version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    restart: always
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
      - ./data/prometheus/data:/data/prometheus       
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/data/prometheus'
    expose:
      - 9090
    user: "0"
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
    
  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: always
    expose:
      - 9100
    
  cadvisor:
    image: braingamer/cadvisor-arm:latest
    container_name: monitoring_cadvisor
    privileged: true
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    devices:
      - /dev/kmsg
    expose:
      - 8080
    
  DockerSolarrs485logger:
    image: revenberg/dockersolarrs485logger
    container_name: DockerSolarrs485logger
    depends_on:
      - influxdb
    restart: always
    links:
      - influxdb

  DockerP1logger:
    image: revenberg/dockerp1logger
    container_name: DockerP1logger
    depends_on:
      - influxdb
    restart: always
    links:
      - influxdb
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0

  DockerWatermeter:
    image: revenberg/dockerwatermeter
    container_name: DockerWatermeter
    depends_on:
      - influxdb
    restart: always
    links:
      - influxdb

  DockerOpenweathermap:
    image: revenberg/dockeropenweathermap
    container_name: DockerOpenweathermap
    depends_on:
      - influxdb
    restart: always
    links:
      - influxdb
    environment:
      - apikey={{ openweathermap_apikey }}

  influxdb:
    image: hypriot/rpi-influxdb
    container_name: influxdb
    environment:
     - INFLUXDB_INIT_PWD="password"
     - PRE_CREATE_DB="power"
    ports:
     - "8083:8083"
     - "8086:8086"
    volumes:
      - ./data/influxdb/data:/var/lib/influxdb  

  grafana:
    image: revenberg/dockergrafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - './env/env.grafana'
    user: "0"
    links:
      - influxdb:influxdb
      - prometheus:prometheus
#      - dsmrdb:dsmrdb
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - ./data/grafana/data:/var/lib/grafana
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=PathPrefix(`/grafana{regex:$$|/.*}`)'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
      - 'traefik.frontend.headers.customRequestHeaders=Authorization:-'
    environment:
    - GF_SECURITY_ADMIN_USER=pi
    - GF_SECURITY_ADMIN_PASSWORD=pi

  mqtt:
    image: "eclipse-mosquitto:latest"
    environment:
      - TZ=Europe/Amsterdam
      - "MQTT_BROKER_URL=mqtt://127.0.0.1"
    ports:
      - 1883:1883
      - 9001:9001
    user: "1000:1000"
    volumes:
      - ./data/mqtt/config:/mosquitto/config
      - ./data/mqtt/data:/mosquitto/data
      - ./data/mqtt/log:/mosquitto/log
    restart: always
    network_mode: host
